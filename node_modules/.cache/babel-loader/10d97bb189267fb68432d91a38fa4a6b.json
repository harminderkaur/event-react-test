{"ast":null,"code":"var _jsxFileName = \"/Users/UjSim/Event-Cinema-FE-React-Test/src/components/Breadcrumbs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Breadcrumbs = () => {\n  _s();\n\n  const [crumbs, setCrumbs] = useState([]);\n  const {\n    location\n  } = window;\n  useEffect(() => {\n    if ((location === null || location === void 0 ? void 0 : location.pathname) && (location === null || location === void 0 ? void 0 : location.pathname) !== '/') {\n      const crumbList = [];\n      const paths = location.pathname.split('/'); // console.log(\"paths\",paths)\n\n      paths.forEach(item => {\n        if (item !== \"nemesis\") {\n          const path = item === \"\" ? '/' : `/${decodeURI(item)}`;\n          const name = item === \"\" ? 'Home' : `${decodeURI(item)}`;\n          crumbList.push({\n            path,\n            name\n          });\n        }\n      });\n      setCrumbs(crumbList);\n    }\n  }, [location === null || location === void 0 ? void 0 : location.pathname]);\n  console.log(\"a\", crumbs.length - 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: crumbs.length ? /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: crumbs.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `breadcrumb-item ${index === crumbs.length - 1 && 'active'}`,\n          children: crumbs.length - 1 && /*#__PURE__*/_jsxDEV(Link, {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 36\n          }, this)\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 30\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Breadcrumbs, \"1GjGS4KRBjphEmaRoGbWQSz3/ng=\");\n\n_c = Breadcrumbs;\nexport default Breadcrumbs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"sources":["/Users/UjSim/Event-Cinema-FE-React-Test/src/components/Breadcrumbs.js"],"names":["useEffect","useState","Link","Breadcrumbs","crumbs","setCrumbs","location","window","pathname","crumbList","paths","split","forEach","item","path","decodeURI","name","push","console","log","length","map","index"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;;AAEA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAACK,IAAAA;AAAD,MAAaC,MAAnB;AACAP,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAAAM,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,QAAV,KAAsB,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,QAAV,MAAuB,GAAhD,EAAoD;AAClD,YAAMC,SAAS,GAAG,EAAlB;AACA,YAAMC,KAAK,GAAGJ,QAAQ,CAACE,QAAT,CAAkBG,KAAlB,CAAwB,GAAxB,CAAd,CAFkD,CAGlD;;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAE;AAClB,YAAGA,IAAI,KAAK,SAAZ,EAAsB;AACpB,gBAAMC,IAAI,GAAGD,IAAI,KAAK,EAAT,GAAc,GAAd,GAAoB,IAAGE,SAAS,CAACF,IAAD,CAAO,EAApD;AACA,gBAAMG,IAAI,GAAGH,IAAI,KAAK,EAAT,GAAa,MAAb,GAAqB,GAAEE,SAAS,CAACF,IAAD,CAAO,EAApD;AAEAJ,UAAAA,SAAS,CAACQ,IAAV,CAAe;AAACH,YAAAA,IAAD;AAAOE,YAAAA;AAAP,WAAf;AACD;AACF,OAPD;AAQAX,MAAAA,SAAS,CAACI,SAAD,CAAT;AACD;AACJ,GAfQ,EAeN,CAACH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,QAAX,CAfM,CAAT;AAiBAU,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBf,MAAM,CAACgB,MAAP,GAAc,CAA/B;AACA,sBAAQ;AAAA,cAAGhB,MAAM,CAACgB,MAAP,gBAAgB;AAAK,oBAAW,YAAhB;AAAA,6BACnB;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGhB,MAAM,CAACiB,GAAP,CAAW,CAACR,IAAD,EAAMS,KAAN,kBACZ;AAAI,UAAA,SAAS,EAAG,mBAAkBA,KAAK,KAAKlB,MAAM,CAACgB,MAAP,GAAc,CAAxB,IAA6B,QAAS,EAAxE;AAAA,oBACIhB,MAAM,CAACgB,MAAP,GAAc,CAAd,iBAAmB,QAAC,IAAD;AAAA,sBAAQP,IAAI,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA;AADvB,WAAgFH,IAAI,CAACG,IAArF;AAAA;AAAA;AAAA;AAAA,gBADC;AADH;AAAA;AAAA;AAAA;AAAA;AADmB;AAAA;AAAA;AAAA;AAAA,YAAhB,GAOE;AAPL,mBAAR;AASD,CA9BD;;GAAMb,W;;KAAAA,W;AAgCN,eAAeA,WAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Breadcrumbs = () =>{\n  const [crumbs, setCrumbs] = useState([])\n  const {location} = window\n  useEffect(()=>{\n      if(location?.pathname && location?.pathname !== '/'){\n        const crumbList = []\n        const paths = location.pathname.split('/')\n        // console.log(\"paths\",paths)\n        paths.forEach(item=>{\n          if(item !== \"nemesis\"){\n            const path = item === \"\" ? '/': `/${decodeURI(item)}`\n            const name = item === \"\"? 'Home':`${decodeURI(item)}`\n          \n            crumbList.push({path, name})\n          }\n        })\n        setCrumbs(crumbList)\n      }\n  }, [location?.pathname])\n  \n  console.log(\"a\", crumbs.length-1)\n  return (<>{crumbs.length ? <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            {crumbs.map((item,index)=>\n            <li className={`breadcrumb-item ${index === crumbs.length-1 && 'active'}`} key={item.name}>\n               {crumbs.length-1 && <Link >{item.name}</Link>}\n            </li>)}\n          </ol>\n        </nav>:null}\n        </>)\n}\n\nexport default Breadcrumbs"]},"metadata":{},"sourceType":"module"}